<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<SpaRoot2>ClientApp\src\@vex\</SpaRoot2>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
		<UserSecretsId>5429904d-26ef-46d2-905c-6f8eee01a179</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.16" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.8" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="%2a%2a\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="%2a%2a\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Remove="%2a%2a\**" />
	  <EmbeddedResource Remove="%2a%2a\**" />
	  <TypeScriptCompile Remove="%2a%2a\**" />
	</ItemGroup>

	<ItemGroup>
	  <TypeScriptCompile Remove="%2a%2a\%2a.ts" />
	  <TypeScriptCompile Remove="%2a%2a\%2a.tsx" />
	</ItemGroup>
	<ItemGroup>
		<Content Remove="node_modules\**" />
		<Content Remove="ClientApp\**" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.14" />
		<PackageReference Include="Dapper" Version="2.0.90" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.14" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.14">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.1.14" />
		<PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.4">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.5" />
		<PackageReference Include="MySql.Data" Version="8.0.24" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.4" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.14" />
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="1.1.1" />
		<PackageReference Include="MySql.Data.EntityFrameworkCore" Version="8.0.22" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\GestaoHYS.Core\GestaoHYS.Core.csproj" />
	  <ProjectReference Include="..\GestaoHYS.Infrstrucrure\GestaoHYS.Infrastructure.csproj" />
	</ItemGroup>


	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot2)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot2)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
