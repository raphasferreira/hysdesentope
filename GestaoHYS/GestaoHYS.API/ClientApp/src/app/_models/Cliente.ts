import { Countries } from "./Countries";
import { Cultures } from "./Cultures";
import { Currencies } from "./Currencies";

export class Cliente {
    versionByte: string;
    settlementDiscountPercent: number;
    locked: boolean;
    oneTimeCustomer: boolean;
    endCustomer: boolean;
    partyKey: string;
    partyKeySegments?: string;
    partyKeySequenceId?: string;
    searchTerm: string;
    name: string;
    companyTaxID: string;
    electronicMail: string;
    telephone: string;
    mobile: string;
    websiteUrl: string;
    notes: string;
    picture?: string;
    pictureThumbnail?: string;
    streetName: string;
    buildingNumber: string;
    postalZone: string;
    cityName: string;
    contactName: string;
    contactTitle?: string;
    username?: string;
    externalId?: string;
    externalVersion?: string;
    isExternallyManaged: boolean;
    isPerson: boolean;
    customerGroup: string;
    customerGroupId: string;
    customerGroupDescription: string;
    priceList: string;
    priceListId: string;
    priceListDescription: string;
    paymentMethod: string;
    paymentMethodId: string;
    paymentMethodDescription: string;
    paymentTerm: string;
    paymentTermId: string;
    paymentTermDescription: string;
    salesperson?: string;
    salespersonId?: string;
    salespersonBaseEntityId?: string;
    salespersonDescription?: string;
    partyTaxSchema: string;
    partyTaxSchemaId: string;
    partyTaxSchemaDescription: string;
    partyWithholdingTaxSchema?: string;
    partyWithholdingTaxSchemaId?: string;
    partyWithholdingTaxSchemaDescription?: string;
    deliveryTerm: string;
    deliveryTermId: string;
    deliveryTermDescription: string;
    accountingSchema: number;
    accountingSchemaDescription: string;
    accountingParty: string;
    accountingPartyId: string;
    accountingPartyDescription: string;
    currency: string;
    currencyId: string;
    currencyDescription: string;
    moeda: Currencies;
    country: string;
    countryId: string;
    countryDescription: string;
    pais: Countries;
    address: string;
    addressId: string;
    contact: string;
    contactId: string;
    culture: string;
    cultureId: string;
    cultureDescription: string;
    cultura: Cultures;
    baseEntityId: string;
    isDraft: boolean;
    idBaseLocal: string;
    idReferencia: string;
    isActive: boolean;
    isDeleted: boolean;
    isSystem: boolean;
    createdBy: string;
    createdOn: Date;
    modifiedBy: string;
    modifiedOn: Date;
    draftId: string;
    subscriptionId?: string;
    _state: number;
    isIntegration: boolean;
    isIntegrated: boolean;

    constructor(cliente){
        this.versionByte= cliente.versionByte;
        this.settlementDiscountPercent= cliente.settlementDiscountPercent;
        this.locked= cliente.locked;
        this.oneTimeCustomer= cliente.oneTimeCustomer;
        this.endCustomer= cliente.endCustomer;
        this.partyKey= cliente.partyKey;
        this.partyKeySegments = cliente.partyKeySegments;
        this.partyKeySequenceId = cliente.partyKeySequenceId;
        this.searchTerm= cliente.searchTerm;
        this.name= cliente.name;
        this.companyTaxID= cliente.companyTaxID;
        this.electronicMail= cliente.electronicMail;
        this.telephone= cliente.telephone;
        this.mobile= cliente.mobile;
        this.websiteUrl= cliente.websiteUrl;
        this.notes= cliente.notes;
        this.picture = cliente.picture;
        this.pictureThumbnail = cliente.pictureThumbnail;
        this.streetName= cliente.streetName;
        this.buildingNumber= cliente.buildingNumber;
        this.postalZone= cliente.postalZone;
        this.cityName= cliente.cityName;
        this.contactName= cliente.contactName;
        this.contactTitle = cliente.contactTitle;
        this.username = cliente.username;
        this.externalId = cliente.externalId;
        this.externalVersion = cliente.externalVersion;
        this.isExternallyManaged= cliente.isExternallyManaged;
        this.isPerson= cliente.isPerson;
        this.customerGroup= cliente.customerGroup;
        this.customerGroupId= cliente.customerGroupId;
        this.customerGroupDescription= cliente.customerGroupDescription;
        this.priceList= cliente.priceList;
        this.priceListId= cliente.priceListId;
        this.priceListDescription= cliente.priceListDescription;
        this.paymentMethod= cliente.paymentMethod;
        this.paymentMethodId= cliente.paymentMethodId;
        this.paymentMethodDescription= cliente.paymentMethodDescription;
        this.paymentTerm= cliente.paymentTerm;
        this.paymentTermId= cliente.paymentTermId;
        this.paymentTermDescription= cliente.paymentTermDescription;
        this.salesperson = cliente.salesperson;
        this.salespersonId = cliente.salespersonId;
        this.salespersonBaseEntityId = cliente.salespersonBaseEntityId;
        this.salespersonDescription = cliente.salespersonDescription;
        this.partyTaxSchema= cliente.partyTaxSchema;
        this.partyTaxSchemaId= cliente.partyTaxSchemaId;
        this.partyTaxSchemaDescription= cliente.partyTaxSchemaDescription;
        this.partyWithholdingTaxSchema = cliente.partyWithholdingTaxSchema;
        this.partyWithholdingTaxSchemaId = cliente.partyWithholdingTaxSchemaId;
        this.partyWithholdingTaxSchemaDescription = cliente.partyWithholdingTaxSchemaDescription;
        this.deliveryTerm= cliente.deliveryTerm;
        this.deliveryTermId= cliente.deliveryTermId;
        this.deliveryTermDescription= cliente.deliveryTermDescription;
        this.accountingSchema= cliente.accountingSchema;
        this.accountingSchemaDescription= cliente.accountingSchemaDescription;
        this.accountingParty= cliente.accountingParty;
        this.accountingPartyId= cliente.accountingPartyId;
        this.accountingPartyDescription= cliente.accountingPartyDescription;
        this.currency= cliente.currency;
        this.currencyId= cliente.currencyId;
        this.currencyDescription= cliente.currencyDescription;
        this.country= cliente.country;
        this.countryId= cliente.countryId;
        this.countryDescription= cliente.countryDescription;
        this.address= cliente.address;
        this.addressId= cliente.addressId;
        this.contact= cliente.contact;
        this.contactId= cliente.contactId;
        this.culture= cliente.culture;
        this.cultureId= cliente.cultureId;
        this.cultureDescription= cliente.cultureDescription;
        this.baseEntityId= cliente.baseEntityId;
        this.isDraft= cliente.isDraft;
        this.idBaseLocal= cliente.idBaseLocal;
        this.isActive= cliente.isActive;
        this.isDeleted= cliente.isDeleted;
        this.isSystem= cliente.isSystem;
        this.createdBy= cliente.createdBy;
        this.createdOn= cliente.createdOn;
        this.modifiedBy= cliente.modifiedBy;
        this.modifiedOn= cliente.modifiedOn;
        this.draftId= cliente.draftId;
        this.subscriptionId = cliente.subscriptionId;
        this._state= cliente._state;
        console.log("construtor");
        this.pais = new Countries(this.countryId, this.countryDescription, this.country);
        console.log( this.pais);

        this.moeda = new Currencies(this.currencyId, this.currencyDescription, this.currency);
        this.cultura = new Cultures(this.cultureId, this.cultureDescription, this.culture);
    }
 
}